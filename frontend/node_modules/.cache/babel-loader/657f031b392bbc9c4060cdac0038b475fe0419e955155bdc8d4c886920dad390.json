{"ast":null,"code":"import axios from \"axios\";\nclass MovieDataService {\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return axios.get(`http://localhost:80/api/v1/movies?page=${page}`);\n  }\n  get(id) {\n    return axios.get(`http://localhost:80/api/v1/movies/id/${id}`);\n  }\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"title\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return axios.get(`http://localhost:80/api/v1/movies?${by}=${query}&page=${page}`);\n  }\n  createReview(data) {\n    return axios.post(\"http://localhsot:80/api/v1/movies/review\", data);\n  }\n  updateReview(data) {\n    return axios.put(\"http://localhsot:80/api/v1/movies/review\", data);\n  }\n  deleteReview(id, userId) {\n    return axios.delete(\"http://localhost:80/api/v1/movies/review\", {\n      data: {\n        review_id: id,\n        user_id: userId\n      }\n    });\n  }\n  getRatings() {\n    return axios.get(\"https://localhost:80/api/v1/movies/ratings\");\n  }\n}\nexport default MovieDataService();","map":{"version":3,"names":["axios","MovieDataService","getAll","page","arguments","length","undefined","get","id","find","query","by","createReview","data","post","updateReview","put","deleteReview","userId","delete","review_id","user_id","getRatings"],"sources":["K:/movie review/frontend/src/services/movies.js"],"sourcesContent":["import axios from \"axios\";\r\nclass MovieDataService {\r\n  getAll(page = 0) {\r\n    return axios.get(`http://localhost:80/api/v1/movies?page=${page}`);\r\n  }\r\n  get(id) {\r\n    return axios.get(`http://localhost:80/api/v1/movies/id/${id}`);\r\n  }\r\n  find(query, by = \"title\", page = 0) {\r\n    return axios.get(\r\n      `http://localhost:80/api/v1/movies?${by}=${query}&page=${page}`\r\n    );\r\n  }\r\n  createReview(data) {\r\n    return axios.post(\"http://localhsot:80/api/v1/movies/review\", data);\r\n  }\r\n  updateReview(data) {\r\n    return axios.put(\"http://localhsot:80/api/v1/movies/review\", data);\r\n  }\r\n  deleteReview(id, userId) {\r\n    return axios.delete(\"http://localhost:80/api/v1/movies/review\", {\r\n      data: { review_id: id, user_id: userId },\r\n    });\r\n  }\r\n  getRatings() {\r\n    return axios.get(\"https://localhost:80/api/v1/movies/ratings\");\r\n  }\r\n}\r\nexport default MovieDataService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,gBAAgB,CAAC;EACrBC,MAAMA,CAAA,EAAW;IAAA,IAAVC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACb,OAAOJ,KAAK,CAACO,GAAG,CAAE,0CAAyCJ,IAAK,EAAC,CAAC;EACpE;EACAI,GAAGA,CAACC,EAAE,EAAE;IACN,OAAOR,KAAK,CAACO,GAAG,CAAE,wCAAuCC,EAAG,EAAC,CAAC;EAChE;EACAC,IAAIA,CAACC,KAAK,EAA0B;IAAA,IAAxBC,EAAE,GAAAP,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;IAAA,IAAED,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAChC,OAAOJ,KAAK,CAACO,GAAG,CACb,qCAAoCI,EAAG,IAAGD,KAAM,SAAQP,IAAK,EAAC,CAChE;EACH;EACAS,YAAYA,CAACC,IAAI,EAAE;IACjB,OAAOb,KAAK,CAACc,IAAI,CAAC,0CAA0C,EAAED,IAAI,CAAC;EACrE;EACAE,YAAYA,CAACF,IAAI,EAAE;IACjB,OAAOb,KAAK,CAACgB,GAAG,CAAC,0CAA0C,EAAEH,IAAI,CAAC;EACpE;EACAI,YAAYA,CAACT,EAAE,EAAEU,MAAM,EAAE;IACvB,OAAOlB,KAAK,CAACmB,MAAM,CAAC,0CAA0C,EAAE;MAC9DN,IAAI,EAAE;QAAEO,SAAS,EAAEZ,EAAE;QAAEa,OAAO,EAAEH;MAAO;IACzC,CAAC,CAAC;EACJ;EACAI,UAAUA,CAAA,EAAG;IACX,OAAOtB,KAAK,CAACO,GAAG,CAAC,4CAA4C,CAAC;EAChE;AACF;AACA,eAAeN,gBAAgB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}