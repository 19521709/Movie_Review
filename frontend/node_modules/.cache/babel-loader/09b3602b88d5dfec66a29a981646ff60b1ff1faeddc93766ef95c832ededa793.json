{"ast":null,"code":"import axios from \"axios\";\nconst getAll = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return axios.get(`http://localhost:80/api/v1/movies?page=${page}`);\n};\nconst get = id => {\n  return axios.get(`http://localhost:80/api/v1/movies/id/${id}`);\n};\nconst find = function (query) {\n  let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"title\";\n  let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return axios.get(`http://localhost:80/api/v1/movies?${by}=${query}&page=${page}`);\n};\nconst createReview = data => {\n  return axios.post(\"http://localhsot:80/api/v1/movies/review\", data);\n};\nconst updateReview = data => {\n  return axios.put(\"http://localhsot:80/api/v1/movies/review\", data);\n};\nconst deleteReview = (id, userId) => {\n  return axios.delete(\"http://localhost:80/api/v1/movies/review\", {\n    data: {\n      review_id: id,\n      user_id: userId\n    }\n  });\n};\nconst getRatings = () => {\n  return axios.get(\"https://localhost:80/api/v1/movies/ratings\");\n};","map":{"version":3,"names":["axios","getAll","page","arguments","length","undefined","get","id","find","query","by","createReview","data","post","updateReview","put","deleteReview","userId","delete","review_id","user_id","getRatings"],"sources":["K:/movie review/frontend/src/services/movies.js"],"sourcesContent":["import axios from \"axios\";\r\n  const getAll = (page = 0) => {\r\n    return axios.get(`http://localhost:80/api/v1/movies?page=${page}`);\r\n  }\r\n  const get = (id) => {\r\n    return axios.get(`http://localhost:80/api/v1/movies/id/${id}`);\r\n  }\r\n  const find = (query, by = \"title\", page = 0) => {\r\n    return axios.get(\r\n      `http://localhost:80/api/v1/movies?${by}=${query}&page=${page}`\r\n    );\r\n  }\r\n  const createReview = (data) => {\r\n    return axios.post(\"http://localhsot:80/api/v1/movies/review\", data);\r\n  }\r\n  const updateReview = (data) => {\r\n    return axios.put(\"http://localhsot:80/api/v1/movies/review\", data);\r\n  }\r\n  const deleteReview = (id, userId) => {\r\n    return axios.delete(\"http://localhost:80/api/v1/movies/review\", {\r\n      data: { review_id: id, user_id: userId },\r\n    });\r\n  }\r\n  const getRatings = () => {\r\n    return axios.get(\"https://localhost:80/api/v1/movies/ratings\");\r\n  }\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACvB,MAAMC,MAAM,GAAG,SAAAA,CAAA,EAAc;EAAA,IAAbC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACtB,OAAOH,KAAK,CAACM,GAAG,CAAE,0CAAyCJ,IAAK,EAAC,CAAC;AACpE,CAAC;AACD,MAAMI,GAAG,GAAIC,EAAE,IAAK;EAClB,OAAOP,KAAK,CAACM,GAAG,CAAE,wCAAuCC,EAAG,EAAC,CAAC;AAChE,CAAC;AACD,MAAMC,IAAI,GAAG,SAAAA,CAACC,KAAK,EAA6B;EAAA,IAA3BC,EAAE,GAAAP,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;EAAA,IAAED,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACzC,OAAOH,KAAK,CAACM,GAAG,CACb,qCAAoCI,EAAG,IAAGD,KAAM,SAAQP,IAAK,EAAC,CAChE;AACH,CAAC;AACD,MAAMS,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAOZ,KAAK,CAACa,IAAI,CAAC,0CAA0C,EAAED,IAAI,CAAC;AACrE,CAAC;AACD,MAAME,YAAY,GAAIF,IAAI,IAAK;EAC7B,OAAOZ,KAAK,CAACe,GAAG,CAAC,0CAA0C,EAAEH,IAAI,CAAC;AACpE,CAAC;AACD,MAAMI,YAAY,GAAGA,CAACT,EAAE,EAAEU,MAAM,KAAK;EACnC,OAAOjB,KAAK,CAACkB,MAAM,CAAC,0CAA0C,EAAE;IAC9DN,IAAI,EAAE;MAAEO,SAAS,EAAEZ,EAAE;MAAEa,OAAO,EAAEH;IAAO;EACzC,CAAC,CAAC;AACJ,CAAC;AACD,MAAMI,UAAU,GAAGA,CAAA,KAAM;EACvB,OAAOrB,KAAK,CAACM,GAAG,CAAC,4CAA4C,CAAC;AAChE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}